{"remainingRequest":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\babel-loader\\lib\\index.js??ref--4-oneOf-1-1!C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\fbjs\\lib\\memoizeStringOnly.js","dependencies":[{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\fbjs\\lib\\memoizeStringOnly.js","mtime":1528785402000},{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n'use strict';\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;",{"version":3,"sources":["C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication7\\ClientApp\\node_modules\\fbjs\\lib\\memoizeStringOnly.js"],"names":["memoizeStringOnly","callback","cache","string","hasOwnProperty","call","module","exports"],"mappings":"AAAA;;;;;;;;;AAUA;AAEA;;;;AAIA,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAIC,KAAK,GAAG,EAAZ;AACA,SAAO,UAAUC,MAAV,EAAkB;AACvB,QAAI,CAACD,KAAK,CAACE,cAAN,CAAqBD,MAArB,CAAL,EAAmC;AACjCD,MAAAA,KAAK,CAACC,MAAD,CAAL,GAAgBF,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBF,MAApB,CAAhB;AACD;;AACD,WAAOD,KAAK,CAACC,MAAD,CAAZ;AACD,GALD;AAMD;;AAEDG,MAAM,CAACC,OAAP,GAAiBP,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;"]}]}