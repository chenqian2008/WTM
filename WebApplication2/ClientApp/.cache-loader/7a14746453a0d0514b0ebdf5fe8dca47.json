{"remainingRequest":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\babel-loader\\lib\\index.js??ref--4-oneOf-1-1!C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\rc-form\\es\\createBaseForm.js","dependencies":[{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\rc-form\\es\\createBaseForm.js","mtime":499162500000},{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n      mixins: mixins,\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n        this.renderFields = {};\n        this.domFields = {}; // HACK: https://github.com/ant-design/ant-design/issues/6406\n\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(this.props, set({}, name, value), valuesAllSet);\n        }\n\n        var field = this.fieldsStore.getField(name);\n        return {\n          name: name,\n          field: _extends({}, field, {\n            value: value,\n            touched: true\n          }),\n          fieldMeta: fieldMeta\n        };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n\n        var cache = this.cachedBind[name];\n\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n\n          var originalProps = fieldElem.props;\n\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`.');\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        }); // make sure that the value will be collect\n\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n\n        this.fieldsStore.setFieldMeta(name, meta);\n\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        } // This field is rendered, record it\n\n\n        this.renderFields[name] = true;\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(this.props, changedFields, this.fieldsStore.getNestedAllFields());\n        }\n\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(this.props, changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n\n          delete this.domFields[name];\n          return;\n        }\n\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, {\n                errors: field.errors\n              });\n            }\n\n            return;\n          }\n\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n\n          var newField = _extends({}, field);\n\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields); // in case normalize\n\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n\n        var validator = new AsyncValidator(allRules);\n\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var fieldName = e.field;\n              var field = get(errorsGroup, fieldName);\n\n              if (_typeof(field) !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, {\n                  errors: []\n                });\n              }\n\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n\n            var nowField = _this7.fieldsStore.getField(name); // avoid concurrency problems\n\n\n            if (nowField.value !== allValues[name]) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n\n          _this7.setFields(nowAllFields);\n\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref2) {\n                var name = _ref2.name;\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              } else if (errors) {\n                reject({\n                  errors: errors,\n                  values: values\n                });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n\n          if (!fields.length) {\n            if (callback) {\n              callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            }\n\n            return;\n          }\n\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n              return !!fieldMeta.validateFirst;\n            });\n          }\n\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          if (console.error) {\n            // eslint-disable-line\n            console.error(e); // eslint-disable-line\n          }\n\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + 'Actually, it\\'s more convenient to handle submitting status by yourself.');\n        }\n\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated.' + 'Actually, it\\'s more convenient to handle submitting status by yourself.');\n        }\n\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n    return argumentContainer(Form, WrappedComponent);\n  };\n}\n\nexport default createBaseForm;",{"version":3,"sources":["C:\\Users\\liuli\\source\\repos\\github\\WalkingTec.Mvvm\\WebApplication2\\ClientApp\\node_modules\\rc-form\\es\\createBaseForm.js"],"names":["_objectWithoutProperties","_defineProperty","_extends","_toConsumableArray","React","createReactClass","AsyncValidator","warning","get","set","createFieldsStore","argumentContainer","identity","normalizeValidateRules","getValidateTriggers","getValueFromEvent","hasRules","getParams","isEmptyObject","flattenArray","DEFAULT_TRIGGER","createBaseForm","option","arguments","length","undefined","mixins","validateMessages","onFieldsChange","onValuesChange","_option$mapProps","mapProps","mapPropsToFields","fieldNameProp","fieldMetaProp","fieldDataProp","_option$formPropName","formPropName","formName","name","withRef","decorate","WrappedComponent","Form","displayName","getInitialState","_this","fields","props","fieldsStore","instances","cachedBind","clearedFieldMetaCache","renderFields","domFields","forEach","key","_fieldsStore","process","env","NODE_ENV","apply","submitting","componentDidMount","cleanUpUselessFields","componentWillReceiveProps","nextProps","updateFields","componentDidUpdate","onCollectCommon","action","args","fieldMeta","getFieldMeta","originalProps","_fieldMeta$originalPr","value","getFieldValue","valuesAll","getAllValues","valuesAllSet","Object","keys","field","getField","touched","onCollect","name_","_len","Array","_key","_onCollectCommon","validate","newField","dirty","setFields","onCollectValidate","_len2","_key2","_onCollectCommon2","validateFieldsInternal","options","firstFields","validateFirst","getCacheBind","fn","cache","oriFn","bind","getFieldDecorator","fieldOption","_this2","getFieldProps","fieldElem","valuePropName","defaultValuePropName","toUpperCase","slice","ref","cloneElement","getFieldValuePropValue","_this3","usersFieldOption","Error","isValidNestedFieldName","trigger","rules","_fieldOption$validate","validateTrigger","initialValue","inputProps","saveRef","validateRules","validateTriggers","indexOf","meta","setFieldMeta","getFieldInstance","getRules","actionRules","filter","item","map","maybeNestedFields","callback","_this4","flattenRegisteredFields","changedFields","reduce","acc","getNestedAllFields","forceUpdate","setFieldsValue","changedValues","fieldsMeta","values","newFields","isRegistered","allValues","_","component","_fieldMeta","preserve","clearField","recoverClearedField","prototype","hasOwnProperty","call","current","_this5","fieldList","getAllFieldsName","removedList","resetFields","ns","_this6","names","isArray","_ref","_this7","fieldNames","_ref$options","allRules","allFields","alreadyErrors","force","errors","validating","f","getFieldsValue","validator","messages","errorsGroup","e","fieldName","fieldErrors","concat","push","expired","nowAllFields","nowField","_ref2","message","validateFields","opt","cb","_this8","pending","Promise","resolve","reject","_getParams","_getParams2","oldCb","getValidFieldsFullName","getValidFieldsName","console","error","isSubmitting","state","submit","_this9","setState","render","_props","wrappedComponentRef","restProps","formProps","getForm","createElement"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\n\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n\n\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n\n      mixins: mixins,\n\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n\n        this.renderFields = {};\n        this.domFields = {};\n\n        // HACK: https://github.com/ant-design/ant-design/issues/6406\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(this.props, set({}, name, value), valuesAllSet);\n        }\n        var field = this.fieldsStore.getField(name);\n        return { name: name, field: _extends({}, field, { value: value, touched: true }), fieldMeta: fieldMeta };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        var cache = this.cachedBind[name];\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n          var originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`.');\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n\n\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        // This field is rendered, record it\n        this.renderFields[name] = true;\n\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(this.props, changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(this.props, changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n          delete this.domFields[name];\n          return;\n        }\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, { errors: field.errors });\n            }\n            return;\n          }\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n          var newField = _extends({}, field);\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n        var validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var fieldName = e.field;\n              var field = get(errorsGroup, fieldName);\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, { errors: [] });\n              }\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n            var nowField = _this7.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (nowField.value !== allValues[name]) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          _this7.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref2) {\n                var name = _ref2.name;\n\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              } else if (errors) {\n                reject({ errors: errors, values: values });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n          if (!fields.length) {\n            if (callback) {\n              callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            }\n            return;\n          }\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n              return !!fieldMeta.validateFirst;\n            });\n          }\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          if (console.error) {\n            // eslint-disable-line\n            console.error(e); // eslint-disable-line\n          }\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + 'Actually, it\\'s more convenient to handle submitting status by yourself.');\n        }\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated.' + 'Actually, it\\'s more convenient to handle submitting status by yourself.');\n        }\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n\n    return argumentContainer(Form, WrappedComponent);\n  };\n}\n\nexport default createBaseForm;"]}]}